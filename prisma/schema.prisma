generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

enum UserRole {
  PROFESSOR
  STUDENT
}

model User {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String
  phone        String
  email        String        @unique
  college      String
  major        String
  role         String
  reservations Reservation[]
}

model Admin {
  id       Int    @id @default(autoincrement())
  loginId  String @unique
  password String
}

model Server {
  id                 Int                  @id @default(autoincrement())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  name               String
  description        String?
  serverAvailability ServerAvailability[]
  reservations       Reservation[]
}

model ServerAvailability {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  server    Server   @relation(fields: [serverId], references: [id])
  serverId  Int
  year      Int
  month     Int
}

model Reservation {
  id               Int               @id @default(autoincrement())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  server           Server            @relation(fields: [serverId], references: [id])
  serverId         Int
  user             User              @relation(fields: [userId], references: [id])
  userId           Int
  reservationDates ReservationDate[]
}

model ReservationDate {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  reservation   Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int
  date          DateTime
}
